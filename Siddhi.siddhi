@App:name("Siddhi")


@App:description("Description of the plan")

@sink(type='log', prefix='LOGGER')
@source(type = 'http', receiver.url = "http://0.0.0.0:8006/news", @map(type = 'json'))
define stream NewsStream (news_count int, country string);

@sink(type='log') 
define stream AverageNews (avgNewsCount double, numberOfEvents long);

@sink(type='log', prefix='Crisis') 
define stream CrisisStream(count int, country string);


@sink(type='http-call',
    publisher.url='http://localhost:8080/engine-rest/message',
    method='POST', sink.id='loan-validation',
    @map(type='json', @payload("""{"messageName": "Message_2kq56jd"} """)))
define stream CrisisStreamMessage(payloadBody string);

@info(name = 'Average')
from NewsStream#window.time(1 min)

select avg(news_count) as avgNewsCount,
       count() as numberOfEvents
insert into AverageNews;

@info(name = 'Simple-selection')
from NewsStream
select country as payloadBody
insert into CrisisStreamMessage;


@info(name = 'Crisis-detection')
from NewsStream as news
    join AverageNews#window.time(1 min) as averageNews
    on news.news_count > convert(averageNews.avgNewsCount, 'int') 

select news.news_count as count, news.country as country
insert into CrisisStream;

@info(name = 'Crisis-message')
from CrisisStream

select "Message_2kq56jd" as payloadBody
insert into CrisisStreamMessage;